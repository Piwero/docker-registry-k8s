apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-deployment
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - image: registry:2
          name: docker-registry-container
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: /var/lib/registry/cert/registry_auth.crt
            - name: REGISTRY_HTTP_TLS_KEY
              value: /var/lib/registry/cert/registry_auth.key
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: Registry Realm
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /var/lib/registry/auth/htpasswd

          volumeMounts:
            - name: registry-tls
              mountPath: /var/lib/registry/cert
            - name: registry-auth
              mountPath: /var/lib/registry/auth

      volumes:
        - name: registry-volume-mount
          persistentVolumeClaim:
            claimName: docker-registry-pv-claim
        - name: registry-tls
          hostPath:
            path: /tmp/registry/tls
        - name: registry-auth
          hostPath:
            path: /tmp/registry/auth

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: docker-registry