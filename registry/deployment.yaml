apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - image: registry:2
          name: docker-registry-container
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: /etc/tls/tls.crt
            - name: REGISTRY_HTTP_TLS_KEY
              value: /etc/tls/tls.key
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: Registry Realm
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /etc/auth/htpasswd
          volumeMounts:
            - name: tls-mount
              mountPath: /etc/tls
            - name: auth-mount
              mountPath: /etc/auth

      volumes:
        - name: registry-volume-mount
          persistentVolumeClaim:
            claimName: docker-registry-pv-claim
        - name: tls-mount
          secret:
            secretName: tls-secrets
        - name: auth-mount
          secret:
            secretName: auth-secrets

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: docker-registry